// <auto-generated />
using System;
using GestionEventosAcademicos.NewApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionEventosAcademicos.NewApi.Data.Migrations
{
    [DbContext(typeof(EventoContext))]
    partial class EventoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GestionEventosAcademicos.Models.Actividad", b =>
                {
                    b.Property<int>("Idactividad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idactividad"));

                    b.Property<DateTime>("Fechafin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Fechainicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("Idevento")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sala")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Idactividad");

                    b.HasIndex("Idevento");

                    b.ToTable("Actividades");
                });

            modelBuilder.Entity("GestionEventosAcademicos.Models.Asistencia", b =>
                {
                    b.Property<int>("Idasistencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idasistencia"));

                    b.Property<bool>("Asistio")
                        .HasColumnType("bit");

                    b.Property<int>("Idactividad")
                        .HasColumnType("int");

                    b.Property<int>("Idinscripcion")
                        .HasColumnType("int");

                    b.HasKey("Idasistencia");

                    b.HasIndex("Idactividad");

                    b.HasIndex("Idinscripcion");

                    b.ToTable("Asistencias");
                });

            modelBuilder.Entity("GestionEventosAcademicos.Models.Certificado", b =>
                {
                    b.Property<int>("Idcertificado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idcertificado"));

                    b.Property<bool>("EstadoCertificado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaEmision")
                        .HasColumnType("datetime2");

                    b.Property<int>("Idinscripcion")
                        .HasColumnType("int");

                    b.HasKey("Idcertificado");

                    b.HasIndex("Idinscripcion")
                        .IsUnique();

                    b.ToTable("Certificados");
                });

            modelBuilder.Entity("GestionEventosAcademicos.Models.Evento", b =>
                {
                    b.Property<int>("Idevento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idevento"));

                    b.Property<int>("Costo")
                        .HasPrecision(18, 2)
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Lugar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Idevento");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("GestionEventosAcademicos.Models.Eventoponente", b =>
                {
                    b.Property<int>("Idevento")
                        .HasColumnType("int");

                    b.Property<int>("Idponente")
                        .HasColumnType("int");

                    b.HasKey("Idevento", "Idponente");

                    b.HasIndex("Idponente");

                    b.ToTable("Eventoponentes");
                });

            modelBuilder.Entity("GestionEventosAcademicos.Models.Inscripcion", b =>
                {
                    b.Property<int>("Idinscripcion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idinscripcion"));

                    b.Property<string>("EstadoInscripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstadoPago")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fechainscripcion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fechapago")
                        .HasColumnType("datetime2");

                    b.Property<int>("Idevento")
                        .HasColumnType("int");

                    b.Property<int>("Idparticipante")
                        .HasColumnType("int");

                    b.Property<string>("Mediopago")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Idinscripcion");

                    b.HasIndex("Idevento");

                    b.HasIndex("Idparticipante");

                    b.ToTable("Inscripciones");
                });

            modelBuilder.Entity("GestionEventosAcademicos.Models.Participante", b =>
                {
                    b.Property<int>("Idparticipante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idparticipante"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Idparticipante");

                    b.HasIndex("Correo")
                        .IsUnique();

                    b.ToTable("Participantes");
                });

            modelBuilder.Entity("GestionEventosAcademicos.Models.Ponente", b =>
                {
                    b.Property<int>("Idponente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idponente"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Idponente");

                    b.HasIndex("Correo")
                        .IsUnique();

                    b.ToTable("Ponentes");
                });

            modelBuilder.Entity("GestionEventosAcademicos.Models.Actividad", b =>
                {
                    b.HasOne("GestionEventosAcademicos.Models.Evento", "Evento")
                        .WithMany("Actividades")
                        .HasForeignKey("Idevento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");
                });

            modelBuilder.Entity("GestionEventosAcademicos.Models.Asistencia", b =>
                {
                    b.HasOne("GestionEventosAcademicos.Models.Actividad", "Actividad")
                        .WithMany("Asistencias")
                        .HasForeignKey("Idactividad")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionEventosAcademicos.Models.Inscripcion", "Inscripcion")
                        .WithMany("Asistencias")
                        .HasForeignKey("Idinscripcion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actividad");

                    b.Navigation("Inscripcion");
                });

            modelBuilder.Entity("GestionEventosAcademicos.Models.Certificado", b =>
                {
                    b.HasOne("GestionEventosAcademicos.Models.Inscripcion", "Inscripcion")
                        .WithOne("Certificado")
                        .HasForeignKey("GestionEventosAcademicos.Models.Certificado", "Idinscripcion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inscripcion");
                });

            modelBuilder.Entity("GestionEventosAcademicos.Models.Eventoponente", b =>
                {
                    b.HasOne("GestionEventosAcademicos.Models.Evento", "Evento")
                        .WithMany("Eventoponentes")
                        .HasForeignKey("Idevento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionEventosAcademicos.Models.Ponente", "Ponente")
                        .WithMany("Eventoponentes")
                        .HasForeignKey("Idponente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");

                    b.Navigation("Ponente");
                });

            modelBuilder.Entity("GestionEventosAcademicos.Models.Inscripcion", b =>
                {
                    b.HasOne("GestionEventosAcademicos.Models.Evento", "Evento")
                        .WithMany("Inscripciones")
                        .HasForeignKey("Idevento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionEventosAcademicos.Models.Participante", "Participante")
                        .WithMany("Inscripciones")
                        .HasForeignKey("Idparticipante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evento");

                    b.Navigation("Participante");
                });

            modelBuilder.Entity("GestionEventosAcademicos.Models.Actividad", b =>
                {
                    b.Navigation("Asistencias");
                });

            modelBuilder.Entity("GestionEventosAcademicos.Models.Evento", b =>
                {
                    b.Navigation("Actividades");

                    b.Navigation("Eventoponentes");

                    b.Navigation("Inscripciones");
                });

            modelBuilder.Entity("GestionEventosAcademicos.Models.Inscripcion", b =>
                {
                    b.Navigation("Asistencias");

                    b.Navigation("Certificado");
                });

            modelBuilder.Entity("GestionEventosAcademicos.Models.Participante", b =>
                {
                    b.Navigation("Inscripciones");
                });

            modelBuilder.Entity("GestionEventosAcademicos.Models.Ponente", b =>
                {
                    b.Navigation("Eventoponentes");
                });
#pragma warning restore 612, 618
        }
    }
}
